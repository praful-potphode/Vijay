{
	"name": "dataflow5",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_DelimitedText_mock",
						"type": "DatasetReference"
					},
					"name": "input"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "maxid"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "employees",
						"type": "DatasetReference"
					},
					"name": "loaddatainazsql"
				}
			],
			"transformations": [
				{
					"name": "surrogateKeykey"
				},
				{
					"name": "arrangecolumns"
				},
				{
					"name": "convertsalarytodecimal"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          gender as string,",
				"          salary as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> input",
				"source(output(",
				"          id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          gender as string,",
				"          salary as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select count(*) as  #count\\nfrom [dbo].[employees]',",
				"     format: 'query') ~> maxid",
				"select1 keyGenerate(output(index as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKeykey",
				"convertsalarytodecimal select(mapColumn(",
				"          id,",
				"          first_name,",
				"          last_name,",
				"          email,",
				"          gender,",
				"          salary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> arrangecolumns",
				"derivedColumn1 cast(output(",
				"          salary as integer '000'",
				"     ),",
				"     errors: true) ~> convertsalarytodecimal",
				"input, select2 join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"surrogateKeykey derive(id = toInteger(index+rcount)) ~> derivedColumn1",
				"join1 select(mapColumn(",
				"          first_name,",
				"          last_name,",
				"          gender,",
				"          salary,",
				"          rcount = {#count},",
				"          email",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"maxid derive({#count} = toInteger(byName('#count'))) ~> MapDrifted1",
				"MapDrifted1 select(mapColumn(",
				"          {#count}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"arrangecolumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          gender as string,",
				"          salary as decimal(19,4)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> loaddatainazsql"
			]
		}
	}
}